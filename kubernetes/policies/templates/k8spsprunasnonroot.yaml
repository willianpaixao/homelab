---
apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8spsprunasnonroot
  annotations:
    description: Requires containers to run as non-root user
spec:
  crd:
    spec:
      names:
        kind: K8sPSPRunAsNonRoot
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8spsprunasnonroot

        violation[{"msg": msg}] {
          container := input_containers[_]
          not container.securityContext.runAsNonRoot
          container_runasnonroot_is_false(container)
          msg := sprintf("container <%v> is not set to runAsNonRoot", [container.name])
        }

        container_runasnonroot_is_false(container) {
          container.securityContext.runAsNonRoot == false
        }

        container_runasnonroot_is_false(container) {
          not has_field(container.securityContext, "runAsNonRoot")
        }

        # Get containers from pods or pod templates
        input_containers[container] {
          # Pod case
          input.review.object.kind == "Pod"
          container := input.review.object.spec.containers[_]
        }

        input_containers[container] {
          # Deployment, StatefulSet, DaemonSet case
          kinds := {"Deployment", "StatefulSet", "DaemonSet"}
          kinds[input.review.object.kind]
          container := input.review.object.spec.template.spec.containers[_]
        }

        has_field(object, field) {
          object[field]
        }
