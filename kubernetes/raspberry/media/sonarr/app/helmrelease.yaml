---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: &namespace media
spec:
  interval: 1h
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          nodeSelector:
            disktype: ssd
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.11.2688@sha256:5bc8cdd83a98862807a1c8d047bcae2658b108ac0a3ee67bf562a229ed1895c6
            env:
              COMPlus_EnableDiagnostics: "0"
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: sonarr-secret
                    key: api_key
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 8989
              SONARR__UPDATE__BRANCH: develop
              TZ: ${TIMEZONE}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 400m
                memory: 400Mi
              limits:
                cpu: 400m
                memory: 400Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/name: Sonarr
        hosts:
          - host: &host sonarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 1Gi
        labels:
          recurring-job-group.longhorn.io/backup: enabled
      downloads:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /downloads
        globalMounts:
          - path: /media/downloads
      series:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /series
        globalMounts:
          - path: /media/series
      tmp:
        type: emptyDir
        globalMounts:
          - path: "/tmp"
    defaultPodOptions:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
