---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich
  namespace: &namespace media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      enableServiceLinks: false
    controllers:
      server:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.103.1@sha256:10761af14a6145353169042f29d2e49943de75b57a5d19251b365fe0d41ee15a
              pullPolicy: IfNotPresent
            command: [./start-server.sh]
            env: &env
              TZ: ${TIMEZONE}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.103.1@sha256:10761af14a6145353169042f29d2e49943de75b57a5d19251b365fe0d41ee15a
              pullPolicy: IfNotPresent
            command: [./start-microservices.sh]
            env: *env
            securityContext:
              readOnlyRootFilesystem: true
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.103.1@sha256:708ff677ab952dda9d7cb9343a6d650a6ac02a4e6c7447015f9df95c780cfc42
              pullPolicy: IfNotPresent
            securityContext:
              readOnlyRootFilesystem: true
    service:
      immich:
        controller: immich
        enabled: false
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        enabled: true
        controller: server
        ports:
          http:
            port: 3001
    ingress:
      immich:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: &host immich.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      upload:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /photos
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload
          microservices:
            app:
              - path: /usr/src/app/upload
      model-cache:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 8Gi
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
      tmp:
        enabled: true
        type: emptyDir
