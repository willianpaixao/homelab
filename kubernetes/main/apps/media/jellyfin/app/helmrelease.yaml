---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
  namespace: &namespace media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      interval: 30m
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      jellyfin:
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            image:
              repository: jellyfin/jellyfin
              tag: "10.9.7"
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_CACHE_DIR: /cache
              TZ: ${TIMEZONE}
            resources:
              requests:
                memory: 1Gi
              limits:
                memory: 2Gi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        controller: jellyfin
        ports:
          http:
            port: *port
          discovery:
            enabled: true
            port: 7359
            protocol: UDP
          dlna:
            enabled: true
            port: 1900
            protocol: UDP
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: jellyfin.png
          gethomepage.dev/name: Jellyfin
        hosts:
          - host: &host jellyfin.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 1Gi
        labels:
          recurring-job-group.longhorn.io/backup: enabled
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache
      movies:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /movies
        globalMounts:
          - path: /media/movies
      series:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /series
        globalMounts:
          - path: /media/series
      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcodes
